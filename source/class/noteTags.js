const { setNote } = require("../scripts/setNote");

class Tager {
  constructor() {}

  static async getTags(note, graph, celestia) {
    let temp = [];

    let mainTag = await this.getMainTag(note, graph, celestia);
    temp.push(mainTag);

    /*
        for (let tag of this.getCategoryTags(note)) {

            tepm.push(tag);
        }
        */

    return temp;
  }

  static async getMainTag(note, graph, celestia) {
    //–¥–æ–ª–∂–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è, —á—Ç–æ note –ø—Ä–æ—à–ª–∞ —á–µ—Ä–µ–∑ setNote()
    let tempFile = await note.findFounder(graph, celestia);
    let tempNote = setNote(tempFile[0], tempFile[1]);
    let [founder_title, founder_text] = await tempNote.findFounder(
      celestia,
      celestia
    );

    let title = founder_title;

    let tag;

    if (title.includes("‚ù§Ô∏è‚Äçüî•")) {
      tag = "—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è";
    } else if (title.includes("ü™®")) {
      tag = "—Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ";
    } else if (title.includes("üåä")) {
      tag = "–ª–∏—á–Ω–æ–µ";
    } else if (title.includes("üå¨Ô∏è")) {
      tag = "–¥—É—Ö–æ–≤–Ω–æ—Å—Ç—å";
    }

    return `#${tag}`;
  }

  static getCategoryTags(note) {
    return [];
  }
}

module.exports = {
  Tager,
};
